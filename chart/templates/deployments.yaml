apiVersion: apps/v1
kind: Deployment
metadata:
  name: openldap
spec:
  selector:
    matchLabels:
      app: openldap
  template:
    metadata:
      labels:
        app: openldap
    spec:
      containers:
      - name: openldap
        image: {{ .Values.images.openldap }}
        ports:
        - name: ldap389
          containerPort: 389
        - name: ldap636
          containerPort: 636
        env:
        - name: LDAP_LOG_LEVEL
          value: "256"
        - name: LDAP_DOMAIN
          value: {{ .Values.ldap.dcfirst }}.{{ .Values.ldap.dcsecond }}
        - name: LDAP_ADMIN_PASSWORD
          value: {{ .Values.ldap.password }}
        - name: LDAP_CONFIG_PASSWORD
          value: "config"
        - name: LDAP_READONLY_USER
          value: "false"
        - name: LDAP_READONLY_USER_USERNAME
          value: "readonly"
        - name: LDAP_READONLY_USER_PASSWORD
          value: "readonly"
        - name: LDAP_RFC2307BIS_SCHEMA
          value: "false"
        - name: LDAP_BACKEND
          value: "mdb"
        - name: LDAP_REPLICATION
          value: "false"
        - name: KEEP_EXISTING_CONFIG
          value: "false"
        - name: LDAP_REMOVE_CONFIG_AFTER_SETUP
          value: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpldapadmin
spec:
  selector:
    matchLabels:
      app: phpldapadmin
  template:
    metadata:
      labels:
        app: phpldapadmin
    spec:
      containers:
      - name: phpldapadmin
        image: {{ .Values.images.phpldapadmin }} 
        ports:
        - name: http
          containerPort: 80 
        env:
        - name: PHPLDAPADMIN_HTTPS
          value: "false"
        - name: PHPLDAPADMIN_LDAP_HOSTS
          value: openldap.{{ .Values.namespace }}.svc.cluster.local
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-authorization
spec:
  selector:
    matchLabels:
      app: webhook_authorization
  template:
    metadata:
      labels:
        app: webhook_authorization
    spec:
      containers:
      - name: webhook
        image: {{ .Values.images.webhook }} 
        volumeMounts:
        - name: tls
          mountPath: "/keys"
        ports:
        - name: https
          containerPort: 443
        env:
        - name: NAMESPACE
          value: {{ .Values.namespace }}
        - name: CNLDAP
          value: cn={{ .Values.ldap.cn }}
        - name: DCLDAP
          value: dc={{ .Values.ldap.dcfirst }},dc={{ .Values.ldap.dcsecond }}
        - name: LDAPPASSWD
          value: {{ .Values.ldap.password }}
      volumes:
      - name: tls
        secret: 
          secretName: webhook

  

